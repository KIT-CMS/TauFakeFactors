# This is an example config containing information for the preselection

ntuple_path: "root://cmsxrootd-kit.gridka.de//store/user/olavoryk/CROWN/ntuples/tauid_2016postVFP_9Okt_v2/CROWNRun"
era: "2016postVFP"
channel: "mt"
tree: "ntuple"
analysis: "smhtt_ul"

output_path: "/ceph/nshadskiy/FFmethod/smhtt_ul/10_2023_v1"

processes:
    DYjets:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "DYJetsToLL_M-10to50_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "DYJetsToLL_M-50_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL16NanoAODv9-106X"
    diboson:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ZZTo2L2Nu_TuneCP5_13TeV_powheg_pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "ZZTo4L_TuneCP5_13TeV_powheg_pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "WZTo3LNu_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL16NanoAODv9-106X"
            # - "ZZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
            # - "WW_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
            # - "WZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
    ttbar:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "TTTo2L2Nu_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "TTToHadronic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL16NanoAODv9-106X"
    Wjets:
        tau_gen_modes:
            - "all"
        samples:
            - "WJetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL16NanoAODv9-106X"
    embedding:
        tau_gen_modes:
            - "all"
        samples:
            - "TauEmbedding-MuTauFinalState_Run2016F-UL2016"
            - "TauEmbedding-MuTauFinalState_Run2016G-UL2016"
            - "TauEmbedding-MuTauFinalState_Run2016H-UL2016"
    data:
        tau_gen_modes:
            - "all"
        samples:
            - "SingleMuon_Run2016F-UL2016"
            - "SingleMuon_Run2016G-UL2016"
            - "SingleMuon_Run2016H-UL2016"
    ST:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ST_t-channel_antitop_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "ST_t-channel_top_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "ST_tW_antitop_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL16NanoAODv9-106X"
            - "ST_tW_top_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL16NanoAODv9-106X"

event_selection:
    lep_pt: "pt_1 > 23"
    lep_eta: "abs(eta_1) < 2.1"
    # lep_mt: "mt_1 < 70"
    had_tau_pt: "pt_2 > 30"
    had_tau_eta: "abs(eta_2) < 2.3"
    had_tau_decay_mode: "(tau_decaymode_2 == 0) || (tau_decaymode_2 == 1) || (tau_decaymode_2 == 10) || (tau_decaymode_2 == 11)"
    had_tau_id_vs_ele: "id_tau_vsEle_VVLoose_2 > 0.5"
    had_tau_id_vs_mu: "id_tau_vsMu_Tight_2 > 0.5"
    single_trigger: "((trg_single_mu22 > 0.5) || (trg_single_mu22_eta2p1 > 0.5) || (trg_single_mu22_tk > 0.5) || (trg_single_mu22_tk_eta2p1 > 0.5))"

mc_weights:
    # general weights: string is passed directly as weight
    pileup: "puweight"
    lep_iso: "iso_wgt_mu_1"
    lep_id: "id_wgt_mu_1"
    had_tau_id_vs_ele: (gen_match_2==5) * ((id_tau_vsEle_VVLoose_2>0.5)*id_wgt_tau_vsEle_VVLoose_2 + (id_tau_vsEle_VVLoose_2<0.5)) + (gen_match_2!=5)
    had_tau_id_vs_mu: (gen_match_2==5) * ((id_tau_vsMu_Tight_2>0.5)*id_wgt_tau_vsMu_Tight_2 + (id_tau_vsMu_Tight_2<0.5)) + (gen_match_2!=5)
    single_trigger: "trg_wgt_single_mu22"
    
    # special weights: these are not generally applied, e.g. only for a specific process or era
    # here the string is a needed information to apply the weight -> see corresponding functions
    generator: ""
    lumi: ""
    Z_pt_reweighting: "ZPtMassReweightWeight"
    Top_pt_reweighting: "topPtReweightWeight"

emb_weights:
    # general weights (for embedding): string is passed directly as weight
    generator: "emb_genweight * emb_idsel_wgt_1 * emb_idsel_wgt_2 * emb_triggersel_wgt"
    lep_iso: "iso_wgt_mu_1"
    lep_id: "id_wgt_mu_1"
    single_trigger: "trg_wgt_single_mu22"