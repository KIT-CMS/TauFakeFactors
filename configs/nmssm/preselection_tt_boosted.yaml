# This is an example config containing information for the preselection

ntuple_path: "root://cmsdcache-kit-disk.gridka.de//store/user/nshadskiy/CROWN/ntuples/nmssm_all_systs_05_2024_v2/CROWNRun"
era: "2018"
channel: "tt"
tree: "ntuple"
analysis: "nmssm_boosted"

output_path: "/ceph/nshadskiy/FFmethod/05_2024_v1_boosted"

processes:
    DYjets:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "DYJetsToLL_LHEFilterPtZ-0To50_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-50To100_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-100To250_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-250To400_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-400To650_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-650ToInf_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
    diboson:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ZZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X" 
            - "WW_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "WZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
    ttbar:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "TTTo2L2Nu_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "TTToHadronic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
    Wjets:
        tau_gen_modes:
            - "all"
        samples:
            - "WJetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W1JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W2JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W3JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W4JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
    ST:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ST_t-channel_antitop_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_t-channel_top_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_tW_antitop_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_tW_top_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
    # embedding:
    #     tau_gen_modes:
    #         - "all"
    #     samples:
    #         - "TauEmbedding-TauTauFinalState_Run2018A-UL2018"
    #         - "TauEmbedding-TauTauFinalState_Run2018B-UL2018"
    #         - "TauEmbedding-TauTauFinalState_Run2018C-UL2018"
    #         - "TauEmbedding-TauTauFinalState_Run2018D-UL2018"
    data:
        tau_gen_modes:
            - "all"
        samples:
            - "JetHT_Run2018A-UL2018"
            - "JetHT_Run2018B-UL2018"
            - "JetHT_Run2018C-UL2018"
            - "JetHT_Run2018D-UL2018"

event_selection:
    # met: "(met_boosted > 120)"
    had_tau_pt: "(boosted_pt_1 > 40) && (boosted_pt_2 > 40)"
    had_tau_eta: "(abs(boosted_eta_1) < 2.3) && (abs(boosted_eta_2) < 2.3)"
    had_tau_decay_mode_1: "(boosted_tau_decaymode_1 == 0) || (boosted_tau_decaymode_1 == 1) || (boosted_tau_decaymode_1 == 10)"
    had_tau_decay_mode_2: "(boosted_tau_decaymode_2 == 0) || (boosted_tau_decaymode_2 == 1) || (boosted_tau_decaymode_2 == 10)"
    # had_tau_id_anti_ele: "(id_boostedtau_antiEle_VLoose_1 > 0.5) && (id_boostedtau_antiEle_VLoose_2 > 0.5)"
    # had_tau_id_anti_mu: "(id_boostedtau_antiMu_Loose_1 > 0.5) && (id_boostedtau_antiMu_Loose_2 > 0.5)"
    single_trigger: "(trg_ak8pfjet400_trimmass30 > 0.5) || (trg_pfht500_pfmet100_pfmht100_idtight > 0.5)"

mc_weights:
    # general weights: string is passed directly as weight
    pileup: "puweight"
    # had_tau_id_anti_ele_1: (boosted_gen_match_1==5) * ((id_boostedtau_antiEle_VLoose_1>0.5)*id_wgt_boostedtau_antiEle_VLoose_1 + (id_boostedtau_antiEle_VLoose_1<0.5)) + (boosted_gen_match_1!=5)
    # had_tau_id_anti_ele_2: (boosted_gen_match_2==5) * ((id_boostedtau_antiEle_VLoose_2>0.5)*id_wgt_boostedtau_antiEle_VLoose_2 + (id_boostedtau_antiEle_VLoose_2<0.5)) + (boosted_gen_match_2!=5)
    # had_tau_id_anti_mu_1: (boosted_gen_match_1==5) * ((id_boostedtau_antiMu_Loose_1>0.5)*id_wgt_boostedtau_antiMu_Loose_1 + (id_boostedtau_antiMu_Loose_1<0.5)) + (boosted_gen_match_1!=5)
    # had_tau_id_anti_mu_2: (boosted_gen_match_2==5) * ((id_boostedtau_antiMu_Loose_2>0.5)*id_wgt_boostedtau_antiMu_Loose_2 + (id_boostedtau_antiMu_Loose_2<0.5)) + (boosted_gen_match_2!=5)
    trigger: "trg_wgt_fatjet * (trg_ak8pfjet400_trimmass30 > 0.5) + (trg_ak8pfjet400_trimmass30 < 0.5)"

    # special weights: these are not generally applied, e.g. only for a specific process or era
    # here the string is a needed information to apply the weight -> see corresponding functions
    generator: 
        stitching:
            - "Wjets"
    lumi: ""
    # Z_pt_reweighting: "ZPtMassReweightWeight"
    Top_pt_reweighting: "topPtReweightWeight"

# emb_weights:
#     # general weights (for embedding): string is passed directly as weight
#     generator: "emb_genweight * emb_idsel_wgt_1 * emb_idsel_wgt_2 * emb_triggersel_wgt"
#     # double_trigger: "emb_trg_wgt_1 * emb_trg_wgt_2"