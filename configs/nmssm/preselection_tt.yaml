# This is an example config containing information for the preselection

ntuple_path: "root://cmsdcache-kit-disk.gridka.de//store/user/nshadskiy/CROWN/ntuples/nmssm_all_systs_05_2024_v2/CROWNRun"
era: "2018"
channel: "tt"
tree: "ntuple"
analysis: "nmssm"

output_path: "/ceph/nshadskiy/FFmethod/07_2024_v1"

processes:
    DYjets:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "DYJetsToLL_LHEFilterPtZ-0To50_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-50To100_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-100To250_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-250To400_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-400To650_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "DYJetsToLL_LHEFilterPtZ-650ToInf_MatchEWPDG20_TuneCP5_13TeV-amcatnloFXFX-pythia8_RunIISummer20UL18NanoAODv9-106X"
    diboson:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ZZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X" 
            - "WW_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "WZ_TuneCP5_13TeV-pythia8_RunIISummer20UL18NanoAODv9-106X"
    ttbar:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "TTTo2L2Nu_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "TTToHadronic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
    Wjets:
        tau_gen_modes:
            - "all"
        samples:
            - "WJetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W1JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W2JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W3JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "W4JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_RunIISummer20UL18NanoAODv9-106X"
    ST:
        tau_gen_modes:
            - "J"
            - "T"
            - "L"
        samples:
            - "ST_t-channel_antitop_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_t-channel_top_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_tW_antitop_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
            - "ST_tW_top_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8_RunIISummer20UL18NanoAODv9-106X"
    embedding:
        tau_gen_modes:
            - "all"
        samples:
            - "TauEmbedding-TauTauFinalState_Run2018A-UL2018"
            - "TauEmbedding-TauTauFinalState_Run2018B-UL2018"
            - "TauEmbedding-TauTauFinalState_Run2018C-UL2018"
            - "TauEmbedding-TauTauFinalState_Run2018D-UL2018"
    data:
        tau_gen_modes:
            - "all"
        samples:
            - "Tau_Run2018A-UL2018_GT36"
            - "Tau_Run2018B-UL2018_GT36"
            - "Tau_Run2018C-UL2018_GT36"
            - "Tau_Run2018D-UL2018_GT36"

event_selection:
    had_tau_pt: "(pt_1 > 40) && (pt_2 > 40)"
    had_tau_eta: "(abs(eta_1) < 2.3) && (abs(eta_2) < 2.3)"
    had_tau_decay_mode_1: "(tau_decaymode_1 == 0) || (tau_decaymode_1 == 1) || (tau_decaymode_1 == 10) || (tau_decaymode_1 == 11)"
    had_tau_decay_mode_2: "(tau_decaymode_2 == 0) || (tau_decaymode_2 == 1) || (tau_decaymode_2 == 10) || (tau_decaymode_2 == 11)"
    had_tau_id_vs_ele: "(id_tau_vsEle_VVLoose_1 > 0.5) && (id_tau_vsEle_VVLoose_2 > 0.5)"
    had_tau_id_vs_mu: "(id_tau_vsMu_VLoose_1 > 0.5) && (id_tau_vsMu_VLoose_2 > 0.5)"
    double_trigger: "((is_data>0.5) && ((run>=317509 && trg_double_tau35_mediumiso_hps>0.5) || (run<317509 && ((trg_double_tau35_tightiso_tightid>0.5) || (trg_double_tau40_mediumiso_tightid>0.5) || (trg_double_tau40_tightiso>0.5))))) || (is_data<0.5 && trg_double_tau35_mediumiso_hps>0.5)"
    boosted_tau_veto: "(boosted_deltaR_ditaupair > 0.8) || (boosted_deltaR_ditaupair < 0.1)"

mc_weights:
    # general weights: string is passed directly as weight
    pileup: "puweight"
    had_tau_id_vs_ele_1: "(id_tau_vsEle_VVLoose_1>0.5)*id_wgt_tau_vsEle_VVLoose_1 + (id_tau_vsEle_VVLoose_1<0.5)"
    had_tau_id_vs_ele_2: "(id_tau_vsEle_VVLoose_2>0.5)*id_wgt_tau_vsEle_VVLoose_2 + (id_tau_vsEle_VVLoose_2<0.5)"
    had_tau_id_vs_mu_1: "(id_tau_vsMu_VLoose_1>0.5)*id_wgt_tau_vsMu_VLoose_1 + (id_tau_vsMu_VLoose_1<0.5)"
    had_tau_id_vs_mu_2: "(id_tau_vsMu_VLoose_2>0.5)*id_wgt_tau_vsMu_VLoose_2 + (id_tau_vsMu_VLoose_2<0.5)"
    double_trigger: "trg_wgt_double_tau_1 * trg_wgt_double_tau_2"

    # special weights: these are not generally applied, e.g. only for a specific process or era
    # here the string is a needed information to apply the weight -> see corresponding functions
    generator: 
        stitching:
            # - "DYjets"
            - "Wjets"
    lumi: ""
    # Z_pt_reweighting: "ZPtMassReweightWeight"
    Top_pt_reweighting: "topPtReweightWeight"

emb_weights:
    # general weights (for embedding): string is passed directly as weight
    generator: "emb_genweight * emb_idsel_wgt_1 * emb_idsel_wgt_2 * emb_triggersel_wgt"
    double_trigger: "trg_wgt_double_tau_1 * trg_wgt_double_tau_2"
    # emb_veto: "(gen_match_1==5) && (gen_match_2==5)"